# Optimized Dockerfile for Render deployment
# Build timestamp: 2025-10-26T01:25:00Z - Fix PYTHONPATH and Nuclei templates installation
FROM python:3.11-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app \
    HEXSTRIKE_PORT=8888 \
    HEXSTRIKE_HOST=0.0.0.0 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    libssl-dev \
    libffi-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install essential security tools (lightweight versions)
RUN apt-get update && apt-get install -y \
    nmap \
    curl \
    wget \
    netcat-traditional \
    dnsutils \
    golang-go \
    && rm -rf /var/lib/apt/lists/*

# Install Go-based security tools
RUN GO111MODULE=on go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest || echo "Nuclei installation failed"

# Set working directory
WORKDIR /app

# Install nuclei templates in app directory (accessible to app user)
ENV NUCLEI_TEMPLATES_PATH=/app/.nuclei-templates \
    PATH="/root/go/bin:${PATH}"
RUN mkdir -p ${NUCLEI_TEMPLATES_PATH} && \
    /root/go/bin/nuclei -update-templates -td ${NUCLEI_TEMPLATES_PATH} || echo "Nuclei templates installation skipped"

# Copy requirements and install Python dependencies
COPY requirements-minimal.txt requirements.txt
RUN pip install --upgrade pip setuptools wheel && \
    pip install -r requirements.txt

# Copy application files
COPY hexstrike_server.py hexstrike_mcp.py ./
COPY api/ ./api/
COPY templates/ ./templates/
COPY static/ ./static/

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/config /app/assets

# Create basic entrypoint
RUN echo '#!/bin/bash\necho "Starting HexStrike AI (Render)..."\nexec python3 hexstrike_server.py --port ${PORT:-8888}' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Expose port (Render uses PORT env var)
EXPOSE ${PORT:-8888}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8888}/health || exit 1

# Start the application
CMD ["/entrypoint.sh"]