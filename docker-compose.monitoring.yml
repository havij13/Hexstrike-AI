version: '3.8'

services:
  # Main HexStrike AI Application
  hexstrike-ai:
    build: .
    ports:
      - "8888:8888"
    environment:
      - HEXSTRIKE_PORT=8888
      - HEXSTRIKE_HOST=0.0.0.0
      - PROMETHEUS_ENABLED=true
      - ELK_ENABLED=true
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - hexstrike-network
    depends_on:
      - elasticsearch
      - redis
      - prometheus

  # ELK Stack for SIEM Integration
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - hexstrike-network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./config/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./config/logstash/config:/usr/share/logstash/config:ro
      - ./logs:/app/logs:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx256m -Xms256m"
    networks:
      - hexstrike-network
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - hexstrike-network
    depends_on:
      - elasticsearch

  # Prometheus Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - hexstrike-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=hexstrike2024
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - hexstrike-network
    depends_on:
      - prometheus

  # Redis for Caching and Session Management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hexstrike-network

  # InfluxDB for Time Series Data
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=hexstrike
      - DOCKER_INFLUXDB_INIT_PASSWORD=hexstrike2024
      - DOCKER_INFLUXDB_INIT_ORG=hexstrike-ai
      - DOCKER_INFLUXDB_INIT_BUCKET=security-metrics
    volumes:
      - influxdb-data:/var/lib/influxdb2
    networks:
      - hexstrike-network

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - hexstrike-network

  # API Gateway (Kong)
  kong:
    image: kong:3.4
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
    volumes:
      - ./config/kong:/kong/declarative:ro
    networks:
      - hexstrike-network

  # Vault for Secrets Management
  vault:
    image: vault:1.15
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=hexstrike-root-token
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - hexstrike-network

  # MISP for Threat Intelligence
  misp:
    image: coolacid/misp-docker:core-latest
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - NOREDIR=true
      - DISIPV6=true
      - MYSQL_HOST=misp-db
      - MYSQL_DATABASE=misp
      - MYSQL_USER=misp
      - MYSQL_PASSWORD=misp
    volumes:
      - misp-data:/var/www/MISP
    networks:
      - hexstrike-network
    depends_on:
      - misp-db

  misp-db:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=misp
      - MYSQL_USER=misp
      - MYSQL_PASSWORD=misp
      - MYSQL_ROOT_PASSWORD=misp
    volumes:
      - misp-db-data:/var/lib/mysql
    networks:
      - hexstrike-network

networks:
  hexstrike-network:
    driver: bridge

volumes:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
  redis-data:
  influxdb-data:
  misp-data:
  misp-db-data: