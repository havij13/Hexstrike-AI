FROM kalilinux/kali-rolling:latest

# 設定環境變數
ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONUNBUFFERED=1 \
    HEXSTRIKE_PORT=8888 \
    HEXSTRIKE_HOST=0.0.0.0

# 更新系統
RUN apt-get update && apt-get upgrade -y

# 安裝基礎工具
RUN apt-get install -y \
    python3 \
    python3-pip \
    python3-venv \
    python3-dev \
    git \
    curl \
    wget \
    unzip \
    build-essential \
    libssl-dev \
    libffi-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 安裝核心安全工具
RUN apt-get update && apt-get install -y \
    nmap \
    gobuster \
    nikto \
    sqlmap \
    hydra \
    john \
    hashcat \
    || echo "Some tools failed to install, continuing..." \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 安裝 Go 工具
RUN apt-get update && apt-get install -y golang-go && apt-get clean

# 安裝 pwntools
RUN apt-get update && apt-get install -y python3-pwntools && apt-get clean

# 設定工作目錄
WORKDIR /app

# 複製 Python 依賴檔案
COPY requirements.txt .

# 安裝 Python 依賴（使用 --break-system-packages 標誌）
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir --break-system-packages -r requirements.txt

# 複製專案檔案
COPY hexstrike_server.py hexstrike_mcp.py ./
COPY assets/ ./assets/
COPY templates/ ./templates/
COPY static/ ./static/

# 建立日誌目錄
RUN mkdir -p /app/logs

# 複製並設定啟動腳本
COPY docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# 暴露 API 端口
EXPOSE 8888

# 健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8888/health || exit 1

# 使用非 root 用戶運行（安全考量）
RUN useradd -m -u 1000 hexstrike && \
    chown -R hexstrike:hexstrike /app
USER hexstrike

# 啟動服務
ENTRYPOINT ["/docker-entrypoint.sh"]
